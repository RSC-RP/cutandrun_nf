Changes in module 'nf-core/fastqc'
--- modules/nf-core/fastqc/main.nf
+++ modules/nf-core/fastqc/main.nf
@@ -11,8 +11,9 @@
     tuple val(meta), path(reads)
 
     output:
-    tuple val(meta), path("*.html"), emit: html
-    tuple val(meta), path("*.zip") , emit: zip
+    tuple val(meta), path("${meta.id}_*", type: 'dir'), emit: fastqc
+    // tuple val(meta), path("*.html"), emit: html
+    // tuple val(meta), path("*.zip") , emit: zip
     path  "versions.yml"           , emit: versions
 
     when:
@@ -21,7 +22,8 @@
     script:
     def args = task.ext.args ?: ''
     def prefix = task.ext.prefix ?: "${meta.id}"
-    // Make list of old name and new name pairs to use for renaming in the bash while loop
+    def output_dir = "${prefix}_${task.process.tokenize(':')[-1]}"
+     // Make list of old name and new name pairs to use for renaming in the bash while loop
     def old_new_pairs = reads instanceof Path || reads.size() == 1 ? [[ reads, "${prefix}.${reads.extension}" ]] : reads.withIndex().collect { entry, index -> [ entry, "${prefix}_${index + 1}.${entry.extension}" ] }
     def rename_to = old_new_pairs*.join(' ').join(' ')
     def renamed_files = old_new_pairs.collect{ old_name, new_name -> new_name }.join(' ')
@@ -29,7 +31,8 @@
     printf "%s %s\\n" $rename_to | while read old_name new_name; do
         [ -f "\${new_name}" ] || ln -s \$old_name \$new_name
     done
-    fastqc $args --threads $task.cpus $renamed_files
+    mkdir -p ${output_dir}
+    fastqc $args -o ${output_dir} --threads $task.cpus $renamed_files
 
     cat <<-END_VERSIONS > versions.yml
     "${task.process}":

************************************************************
